from models import User
from database import test_connection

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    –£–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ–º —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    """
    print("üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å PostgreSQL")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if not test_connection():
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
        print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ setup.py –∑–∞–Ω–æ–≤–æ")
        print("–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: python setup.py")
        return
    
    show_main_menu()

def show_main_menu():
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    while True:
        print("\n" + "="*50)
        print("üìã –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ")
        print("="*50)
        print("1. üë• –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("2. ‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("3. üîç –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID")
        print("4. üìß –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email")
        print("5. ‚úèÔ∏è  –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("6. üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("7. üìä –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
        print("8. üöÄ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –ë–î")
        print("9. ‚ùå –í—ã—Ö–æ–¥")
        print("="*50)
        
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-9): ").strip()
        
        if choice == '1':
            show_all_users()
        elif choice == '2':
            add_new_user()
        elif choice == '3':
            find_user_by_id()
        elif choice == '4':
            find_user_by_email()
        elif choice == '5':
            update_user()
        elif choice == '6':
            delete_user()
        elif choice == '7':
            show_extended_info()
        elif choice == '8':
            run_migrations_menu()
        elif choice == '9':
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç 1 –¥–æ 9.")

def show_all_users():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    print("-" * 40)
    
    users = User.get_all()
    
    if not users:
        print("‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        return
        
    for i, user in enumerate(users, 1):
        print(f"{i}. ID: {user.id}")
        print(f"   –ò–º—è: {user.name}")
        print(f"   Email: {user.email}")
        print(f"   –í–æ–∑—Ä–∞—Å—Ç: {user.age if user.age else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
        if hasattr(user, 'phone') and user.phone:
            print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {user.phone}")
        if hasattr(user, 'status') and user.status:
            print(f"   –°—Ç–∞—Ç—É—Å: {user.status}")
        if user.created_at:
            print(f"   üìÖ –°–æ–∑–¥–∞–Ω: {user.created_at}")
        print()

def add_new_user():
    """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    print("\n‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    print("-" * 35)
    
    name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ").strip()
    email = input("–í–≤–µ–¥–∏—Ç–µ email: ").strip()
    age = input("–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç: ").strip()
    phone = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): ").strip()
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if not name or not email:
        print("‚ùå –ò–º—è –∏ email –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è")
        return
        
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ email
    existing_user = User.get_by_email(email)
    if existing_user:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email '{email}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return
        
    try:
        age = int(age) if age else None
        if age is not None and (age < 1 or age > 150):
            print("‚ùå –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 150 –ª–µ—Ç")
            return
    except ValueError:
        print("‚ùå –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        return
        
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = User(name=name, email=email, age=age)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if phone:
        user.phone = phone
    
    if user.save():
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω! ID: {user.id}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å, –µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if phone:
            save_user_profile(user.id, phone)
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

def find_user_by_id():
    """–ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID"""
    print("\nüîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID:")
    print("-" * 30)
    
    user_id = input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
    
    try:
        user_id = int(user_id)
        if user_id <= 0:
            print("‚ùå ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")
            return
    except ValueError:
        print("‚ùå ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        return
        
    user = User.get_by_id(user_id)
    
    if user:
        print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:")
        print(f"   ID: {user.id}")
        print(f"   –ò–º—è: {user.name}")
        print(f"   Email: {user.email}")
        print(f"   –í–æ–∑—Ä–∞—Å—Ç: {user.age if user.age else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
        if hasattr(user, 'phone') and user.phone:
            print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {user.phone}")
        if hasattr(user, 'status') and user.status:
            print(f"   –°—Ç–∞—Ç—É—Å: {user.status}")
        if user.created_at:
            print(f"   –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {user.created_at}")
    else:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")

def find_user_by_email():
    """–ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email"""
    print("\nüìß –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email:")
    print("-" * 35)
    
    email = input("–í–≤–µ–¥–∏—Ç–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
    
    if not email:
        print("‚ùå Email –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return
        
    user = User.get_by_email(email)
    
    if user:
        print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:")
        print(f"   ID: {user.id}")
        print(f"   –ò–º—è: {user.name}")
        print(f"   Email: {user.email}")
        print(f"   –í–æ–∑—Ä–∞—Å—Ç: {user.age if user.age else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
        if hasattr(user, 'phone') and user.phone:
            print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {user.phone}")
        if hasattr(user, 'status') and user.status:
            print(f"   –°—Ç–∞—Ç—É—Å: {user.status}")
    else:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email '{email}' –Ω–µ –Ω–∞–π–¥–µ–Ω")

def update_user():
    """–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("\n‚úèÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    print("-" * 35)
    
    user_id = input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ").strip()
    
    try:
        user_id = int(user_id)
        if user_id <= 0:
            print("‚ùå ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")
            return
    except ValueError:
        print("‚ùå ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        return
        
    user = User.get_by_id(user_id)
    
    if not user:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
        
    print(f"\n–¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    print(f"1. –ò–º—è: {user.name}")
    print(f"2. Email: {user.email}")
    print(f"3. –í–æ–∑—Ä–∞—Å—Ç: {user.age if user.age else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
    if hasattr(user, 'phone'):
        print(f"4. –¢–µ–ª–µ—Ñ–æ–Ω: {user.phone if user.phone else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
    if hasattr(user, 'status'):
        print(f"5. –°—Ç–∞—Ç—É—Å: {user.status if user.status else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
    
    print("\n–ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å?")
    print("1 - –ò–º—è, 2 - Email, 3 - –í–æ–∑—Ä–∞—Å—Ç, 4 - –¢–µ–ª–µ—Ñ–æ–Ω, 5 - –°—Ç–∞—Ç—É—Å")
    field_choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (1-5): ").strip()
    
    if field_choice == '1':
        new_name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è: ").strip()
        if new_name:
            user.name = new_name
    elif field_choice == '2':
        new_email = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π email: ").strip()
        if new_email:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–≥–æ email
            existing = User.get_by_email(new_email)
            if existing and existing.id != user.id:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email '{new_email}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                return
            user.email = new_email
    elif field_choice == '3':
        new_age = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç: ").strip()
        if new_age:
            try:
                user.age = int(new_age)
                if user.age < 1 or user.age > 150:
                    print("‚ùå –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 150 –ª–µ—Ç")
                    return
            except ValueError:
                print("‚ùå –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
                return
    elif field_choice == '4' and hasattr(user, 'phone'):
        new_phone = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: ").strip()
        user.phone = new_phone
    elif field_choice == '5' and hasattr(user, 'status'):
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã: active, inactive")
        new_status = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: ").strip().lower()
        if new_status in ['active', 'inactive']:
            user.status = new_status
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å—Ç–∞—Ç—É—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'active' –∏–ª–∏ 'inactive'")
            return
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä –ø–æ–ª—è")
        return
    
    if user.save():
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

def delete_user():
    """–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    print("-" * 25)
    
    user_id = input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ").strip()
    
    try:
        user_id = int(user_id)
        if user_id <= 0:
            print("‚ùå ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")
            return
    except ValueError:
        print("‚ùå ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        return
        
    user = User.get_by_id(user_id)
    
    if not user:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
        
    print(f"\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    print(f"   ID: {user.id}")
    print(f"   –ò–º—è: {user.name}")
    print(f"   Email: {user.email}")
    
    confirm = input("\n‚ùì –í—ã —É–≤–µ—Ä–µ–Ω—ã? (yes/NO): ").strip().lower()
    
    if confirm == 'yes':
        if user.delete():
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{user.name}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    else:
        print("‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")

def show_extended_info():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö"""
    from database import Database
    
    print("\nüìä –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
    print("-" * 30)
    
    db = Database()
    if not db.connect():
        return
    
    try:
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        db.cursor.execute("SELECT COUNT(*) FROM users")
        total_users = db.cursor.fetchone()[0]
        
        db.cursor.execute("SELECT COUNT(*) FROM users WHERE age IS NOT NULL")
        users_with_age = db.cursor.fetchone()[0]
        
        db.cursor.execute("SELECT AVG(age) FROM users WHERE age IS NOT NULL")
        avg_age = db.cursor.fetchone()[0]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
        db.cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'user_profiles'
            )
        """)
        has_profiles = db.cursor.fetchone()[0]
        
        if has_profiles:
            db.cursor.execute("SELECT COUNT(*) FROM user_profiles")
            profiles_count = db.cursor.fetchone()[0]
        else:
            profiles_count = 0
            
        print(f"üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
        print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –≤–æ–∑—Ä–∞—Å—Ç–æ–º: {users_with_age}")
        if avg_age:
            print(f"   –°—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç: {avg_age:.1f} –ª–µ—Ç")
        print(f"   –°–æ–∑–¥–∞–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: {profiles_count}")
        
        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        print(f"\nüÜï –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
        db.cursor.execute("""
            SELECT name, email, created_at 
            FROM users 
            ORDER BY created_at DESC 
            LIMIT 3
        """)
        recent_users = db.cursor.fetchall()
        
        for i, (name, email, created_at) in enumerate(recent_users, 1):
            print(f"   {i}. {name} ({email}) - {created_at}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    finally:
        db.disconnect()

def run_migrations_menu():
    """–ó–∞–ø—É—Å–∫ –º–µ–Ω—é –º–∏–≥—Ä–∞—Ü–∏–π"""
    try:
        from migrations import main as migrations_main
        print("\nüöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –º–∏–≥—Ä–∞—Ü–∏–π...")
        migrations_main()
    except ImportError as e:
        print(f"‚ùå –ú–æ–¥—É–ª—å –º–∏–≥—Ä–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª migrations.py –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –º–∏–≥—Ä–∞—Ü–∏–π: {e}")

def save_user_profile(user_id, phone):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)"""
    from database import Database
    
    db = Database()
    if not db.connect():
        return
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã user_profiles
        db.cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'user_profiles'
            )
        """)
        has_profiles_table = db.cursor.fetchone()[0]
        
        if has_profiles_table:
            db.cursor.execute("""
                INSERT INTO user_profiles (user_id, city, country) 
                VALUES (%s, '–ú–æ—Å–∫–≤–∞', '–†–æ—Å—Å–∏—è')
                ON CONFLICT (user_id) DO NOTHING
            """, (user_id,))
            db.connection.commit()
            print("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–∑–¥–∞–Ω")
            
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å: {e}")
    finally:
        db.disconnect()

if __name__ == "__main__":
    main()