 –£—Å—Ç–∞–Ω–æ–≤–∫–∞ pytest
bash
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ pytest –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
pip install pytest

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –≤–µ—Ä—Å–∏–∏
pytest --version

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞ (–µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ pytest –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)
python -m pytest --version
üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
text
my_project/                 # –ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
‚îú‚îÄ‚îÄ src/                   # –ü–∞–ø–∫–∞ –¥–ª—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚îÇ   ‚îú‚îÄ‚îÄ __init__.py        # –§–∞–π–ª, –ø—Ä–µ–≤—Ä–∞—â–∞—é—â–∏–π –ø–∞–ø–∫—É –≤ Python-–ø–∞–∫–µ—Ç
‚îÇ   ‚îî‚îÄ‚îÄ calculator.py      # –ú–æ–¥—É–ª—å —Å –æ—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚îú‚îÄ‚îÄ tests/                 # –ü–∞–ø–∫–∞ –¥–ª—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
‚îÇ   ‚îú‚îÄ‚îÄ __init__.py        # –î–µ–ª–∞–µ—Ç tests Python-–ø–∞–∫–µ—Ç–æ–º
‚îÇ   ‚îî‚îÄ‚îÄ test_calculator.py # –¢–µ—Å—Ç—ã –¥–ª—è calculator.py
‚îú‚îÄ‚îÄ requirements.txt       # –§–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞
‚îî‚îÄ‚îÄ pytest.ini            # –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è pytest
‚úçÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —Ç–µ—Å—Ç–∞
–ú–æ–¥—É–ª—å —Å –∫–æ–¥–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (src/calculator.py)
python
def add(a: float, b: float) -> float:
    """–°–ª–æ–∂–µ–Ω–∏–µ –¥–≤—É—Ö —á–∏—Å–µ–ª"""
    return a + b  # –ü—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—É–º–º—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤

def multiply(a: float, b: float) -> float:
    """–£–º–Ω–æ–∂–µ–Ω–∏–µ –¥–≤—É—Ö —á–∏—Å–µ–ª"""
    return a * b  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤

def divide(a: float, b: float) -> float:
    """–î–µ–ª–µ–Ω–∏–µ –¥–≤—É—Ö —á–∏—Å–µ–ª"""
    if b == 0:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–µ–ª–∏—Ç–µ–ª—å –Ω—É–ª–µ–º
        # –ï—Å–ª–∏ –¥–µ–ª–∏—Ç–µ–ª—å –Ω–æ–ª—å, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
        raise ValueError("–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ")
    return a / b  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–ª–µ–Ω–∏—è
–¢–µ—Å—Ç–æ–≤—ã–π –º–æ–¥—É–ª—å (tests/test_calculator.py)
python
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º pytest –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
import pytest
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å
from src.calculator import add, multiply, divide

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
class TestCalculator:
    """–¢–µ—Å—Ç—ã –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞"""
    
    def test_add_positive_numbers(self):
        """–¢–µ—Å—Ç —Å–ª–æ–∂–µ–Ω–∏—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ 2 + 3 = 5
        assert add(2, 3) == 5
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ 0 + 0 = 0
        assert add(0, 0) == 0
        
    def test_add_negative_numbers(self):
        """–¢–µ—Å—Ç —Å–ª–æ–∂–µ–Ω–∏—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ–∂–µ–Ω–∏–µ –¥–≤—É—Ö –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª
        assert add(-1, -1) == -2
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ–∂–µ–Ω–∏–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ
        assert add(-5, 3) == -2
    
    def test_multiply_basic(self):
        """–¢–µ—Å—Ç —É–º–Ω–æ–∂–µ–Ω–∏—è"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–º–Ω–æ–∂–µ–Ω–∏–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª
        assert multiply(3, 4) == 12
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–º–Ω–æ–∂–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å
        assert multiply(0, 5) == 0
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–º–Ω–æ–∂–µ–Ω–∏–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ
        assert multiply(-2, 3) == -6
    
    def test_divide_normal(self):
        """–¢–µ—Å—Ç –æ–±—ã—á–Ω–æ–≥–æ –¥–µ–ª–µ–Ω–∏—è"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–ª–µ–Ω–∏–µ –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞
        assert divide(10, 2) == 5
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–ª–µ–Ω–∏–µ —Å –¥—Ä–æ–±–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        assert divide(5, 2) == 2.5
    
    def test_divide_by_zero(self):
        """–¢–µ—Å—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å"""
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        with pytest.raises(ValueError, match="–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ"):
            # –≠—Ç–æ—Ç –∫–æ–¥ –¥–æ–ª–∂–µ–Ω –≤—ã–∑–≤–∞—Ç—å ValueError
            divide(10, 0)
üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—É—Å–∫–∞
bash
# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ
pytest

# –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥ (verbose) - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
pytest -v

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ç–æ–ª—å–∫–æ –∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
pytest tests/test_calculator.py

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ç–æ–ª—å–∫–æ –∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞
pytest tests/test_calculator.py::TestCalculator

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–µ—Ç–æ–¥–∞
pytest tests/test_calculator.py::TestCalculator::test_add_positive_numbers

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö "add" –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
pytest -k "add"

# –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–≤–æ–¥ print() —Ñ—É–Ω–∫—Ü–∏–π –≤ —Ç–µ—Å—Ç–∞—Ö
pytest -s

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –æ—à–∏–±–∫–µ (x - —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –æ—Ç exit)
pytest -x
–ü–æ–ª–µ–∑–Ω—ã–µ —Ñ–ª–∞–≥–∏ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã
bash
# –ò–∑–º–µ—Ä–µ–Ω–∏–µ –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–¥–∞ —Ç–µ—Å—Ç–∞–º–∏ (—Ç—Ä–µ–±—É–µ—Ç—Å—è pytest-cov)
pytest --cov=src

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –æ—Ç—á–µ—Ç–∞ –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ (—Ç—Ä–µ–±—É–µ—Ç—Å—è pytest-html)
pytest --html=report.html

# –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ 4 –ø–æ—Ç–æ–∫–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è pytest-xdist)
pytest -n 4

# –ü–æ–∫–∞–∑–∞—Ç—å 5 —Å–∞–º—ã—Ö –º–µ–¥–ª–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
pytest --durations=5
üõ† –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ pytest
1. –£–º–Ω—ã–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (assert)
python
# pytest –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∫–∞–∂–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ
assert result == expected          # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ
assert user.is_active             # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—É–ª–µ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
assert len(items) > 0             # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –∫–æ–ª–ª–µ–∫—Ü–∏–∏
2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤
–§–∞–π–ª—ã: test_*.py –∏–ª–∏ *_test.py (pytest –∏—â–µ—Ç —Ñ–∞–π–ª—ã –ø–æ —ç—Ç–∏–º —à–∞–±–ª–æ–Ω–∞–º)

–§—É–Ω–∫—Ü–∏–∏: test_* (–ª—é–±–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –Ω–∞—á–∏–Ω–∞—é—â–∞—è—Å—è —Å test_)

–ö–ª–∞—Å—Å—ã: Test* (–ª—é–±–æ–π –∫–ª–∞—Å—Å, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å Test)

3. –ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –æ–± –æ—à–∏–±–∫–∞—Ö
–ü—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞ pytest –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç:

–ó–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ –º–æ–º–µ–Ω—Ç –æ—à–∏–±–∫–∏

–†–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –æ–∂–∏–¥–∞–µ–º—ã–º –∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º

–ü–æ–ª–Ω—ã–π traceback –æ—à–∏–±–∫–∏

üîß –§–∏–∫—Å—Ç—É—Ä—ã (Fixtures)
–ü—Ä–æ—Å—Ç–∞—è —Ñ–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
python
import pytest

# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä @pytest.fixture –æ—Ç–º–µ—á–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫–∞–∫ —Ñ–∏–∫—Å—Ç—É—Ä—É
@pytest.fixture
def sample_user():
    """–§–∏–∫—Å—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    return {
        "name": "John Doe",
        "email": "john@example.com",
        "age": 30
    }

# –§–∏–∫—Å—Ç—É—Ä–∞ sample_user –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ —Ç–µ—Å—Ç
def test_user_age(sample_user):
    """–¢–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ–∏–∫—Å—Ç—É—Ä—É sample_user"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    assert sample_user["age"] == 30
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    assert sample_user["name"] == "John Doe"
–§–∏–∫—Å—Ç—É—Ä–∞ —Å setup –∏ teardown
python
@pytest.fixture
def database_connection():
    """–§–∏–∫—Å—Ç—É—Ä–∞ —Å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –∏ –æ—á–∏—Å—Ç–∫–æ–π —Ä–µ—Å—É—Ä—Å–æ–≤"""
    # Setup - –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –î–û —Ç–µ—Å—Ç–∞
    connection = connect_to_database()  # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    
    yield connection  # –ü–µ—Ä–µ–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ç–µ—Å—Ç
    
    # Teardown - –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ü–û–°–õ–ï —Ç–µ—Å—Ç–∞
    connection.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∑–∞–∫—Ä—ã—Ç–æ")

def test_database_query(database_connection):
    """–¢–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ–∏–∫—Å—Ç—É—Ä—É —Å –ë–î"""
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    result = database_connection.execute("SELECT 1")
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ None
    assert result is not None
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è —Ñ–∏–∫—Å—Ç—É—Ä–∞
python
@pytest.fixture(autouse=True)  # autouse=True - —Ñ–∏–∫—Å—Ç—É—Ä–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
def setup_environment():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞"""
    print("–ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∞")  # –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ç–µ—Å—Ç–æ–º
    yield  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É setup –∏ teardown
    print("–ö–æ–Ω–µ—Ü —Ç–µ—Å—Ç–∞")   # –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞
üìä –ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤
–ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∞—Ü–∏—è –æ–¥–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Ä–∞–∑–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
python
import pytest

# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä parametrize –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–¥–∏–Ω —Ç–µ—Å—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
@pytest.mark.parametrize("a,b,expected", [
    (1, 2, 3),    # –ü–µ—Ä–≤—ã–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö: a=1, b=2, expected=3
    (0, 0, 0),    # –í—Ç–æ—Ä–æ–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
    (-1, 1, 0),   # –¢—Ä–µ—Ç–∏–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
    (10, -5, 5)   # –ß–µ—Ç–≤–µ—Ä—Ç—ã–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
])
def test_add_parametric(a, b, expected):
    """–û–¥–∏–Ω —Ç–µ—Å—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ –Ω–∞–±–æ—Ä–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö"""
    from src.calculator import add
    # –¢–µ—Å—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è 4 —Ä–∞–∑–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ a, b, expected
    assert add(a, b) == expected
–ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∞—Ü–∏—è —Å –ø–æ–Ω—è—Ç–Ω—ã–º–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º–∏
python
@pytest.mark.parametrize("a,b,expected", [
    (1, 2, 3),      # –ë—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –∫–∞–∫ "positive" –≤ –æ—Ç—á–µ—Ç–µ
    (0, 0, 0),      # –ë—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –∫–∞–∫ "zeros" –≤ –æ—Ç—á–µ—Ç–µ
    (-1, 1, 0)      # –ë—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –∫–∞–∫ "negative_positive" –≤ –æ—Ç—á–µ—Ç–µ
], ids=["positive", "zeros", "negative_positive"])  # –ü–æ–Ω—è—Ç–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
def test_add_with_ids(a, b, expected):
    """–¢–µ—Å—Ç —Å —á–∏—Ç–∞–µ–º—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö"""
    assert add(a, b) == expected
‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
–§–∞–π–ª pytest.ini
ini
[pytest]
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
python_files = test_*.py     # –ò—Å–∫–∞—Ç—å —Ñ–∞–π–ª—ã, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å test_
python_classes = Test*       # –ò—Å–∫–∞—Ç—å –∫–ª–∞—Å—Å—ã, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å Test
python_functions = test_*    # –ò—Å–∫–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å test_

# –û–ø—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—É—Å–∫–æ–≤
addopts = -v --tb=short      # -v: –ø–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥, --tb=short: –∫–æ—Ä–æ—Ç–∫–∏–µ traceback

# –ü–∞–ø–∫–∏, –≥–¥–µ –∏—Å–∫–∞—Ç—å —Ç–µ—Å—Ç—ã
testpaths = tests

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –º–∞—Ä–∫–µ—Ä–æ–≤
markers =
    slow: –º–µ–¥–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã           # –ú–∞—Ä–∫–µ—Ä –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
    integration: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã # –ú–∞—Ä–∫–µ—Ä –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
–§–∞–π–ª pyproject.toml (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞)
toml
[tool.pytest.ini_options]
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# –û–ø—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
addopts = ["-v", "--tb=short"]

# –ü–∞–ø–∫–∏ —Å —Ç–µ—Å—Ç–∞–º–∏
testpaths = ["tests"]

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –º–∞—Ä–∫–µ—Ä—ã
[tool.pytest.ini_options.markers]
slow = "–º–µ–¥–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã"
integration = "–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã"
üè∑ –ú–∞—Ä–∫–µ—Ä—ã (Markers)
–°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–æ–≤
python
import time

# –ü–æ–º–µ—á–∞–µ–º —Ç–µ—Å—Ç –∫–∞–∫ –º–µ–¥–ª–µ–Ω–Ω—ã–π —Å –ø–æ–º–æ—â—å—é –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ @pytest.mark.slow
@pytest.mark.slow
def test_long_operation():
    """–≠—Ç–æ—Ç —Ç–µ—Å—Ç –±—É–¥–µ—Ç –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –º–µ–¥–ª–µ–Ω–Ω—ã–π"""
    time.sleep(5)  # –ò–º–∏—Ç–∏—Ä—É–µ–º –¥–æ–ª–≥—É—é –æ–ø–µ—Ä–∞—Ü–∏—é
    assert True    # –ü—Ä–æ–≤–µ—Ä–∫–∞

# –ü–æ–º–µ—á–∞–µ–º —Ç–µ—Å—Ç –∫–∞–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π
@pytest.mark.integration
def test_database_integration():
    """–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏"""
    assert True  # –ó–¥–µ—Å—å –±—ã–ª–∞ –±—ã —Ä–µ–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ë–î
–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–æ –º–∞—Ä–∫–µ—Ä–∞–º
bash
# –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã, –ù–ï –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ –∫–∞–∫ "slow"
pytest -m "not slow"

# –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç—ã, –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ –∫–∞–∫ "integration"
pytest -m integration

# –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç—ã, –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ –∫–∞–∫ "slow"
pytest -m slow
üêõ –ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è
–ü—Ä–æ–±–ª–µ–º–∞ 1: –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
–û—à–∏–±–∫–∞: ModuleNotFoundError: No module named 'src'

–†–µ—à–µ–Ω–∏–µ:

bash
# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é PYTHONPATH –Ω–∞ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
export PYTHONPATH=.

# –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞
python -m pytest
–ü—Ä–æ–±–ª–µ–º–∞ 2: –ö–æ–¥–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤
–û—à–∏–±–∫–∞: SyntaxError: source code string cannot contain null bytes

–†–µ—à–µ–Ω–∏–µ:

python
# –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ñ–∞–π–ª—ã —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫–∏ UTF-8
with open('file.py', 'w', encoding='utf-8') as f:
    f.write('–∫–æ–¥')  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–¥ –≤ —Ñ–∞–π–ª
–ü—Ä–æ–±–ª–µ–º–∞ 3: –¢–µ—Å—Ç—ã –Ω–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è
–†–µ—à–µ–Ω–∏–µ:

–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å test_

–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å test_

–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞

üìà Best Practices (–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏)
1. –ü—Ä–∞–≤–∏–ª–∞ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è
python
# –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã: test_<module>.py
test_calculator.py
test_user_service.py

# –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: test_<scenario>
test_add_numbers()
test_user_creation()

# –¢–µ—Å—Ç–æ–≤—ã–µ –∫–ª–∞—Å—Å—ã: Test<Feature>
TestCalculator
TestUserAuthentication
2. –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤ –ø–æ —à–∞–±–ª–æ–Ω—É
python
def test_<—á—Ç–æ_—Ç–µ—Å—Ç–∏—Ä—É–µ–º>_<—É—Å–ª–æ–≤–∏—è>_<–æ–∂–∏–¥–∞–µ–º—ã–π_—Ä–µ–∑—É–ª—å—Ç–∞—Ç>():
    # –ü—Ä–∏–º–µ—Ä—ã:
    test_add_positive_numbers_returns_sum()
    test_user_login_with_invalid_password_raises_error()
    test_database_connection_with_valid_config_succeeds()
3. –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Ç–µ—Å—Ç–æ–≤
python
# –ö–∞–∂–¥—ã–π —Ç–µ—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–º
def test_user_creation():
    user = create_user()  # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    assert user.id is not None

def test_user_deletion():
    user = create_user()  # –°–Ω–æ–≤–∞ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    delete_user(user.id)  # –ù–µ –∑–∞–≤–∏—Å–∏–º –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç–µ—Å—Ç–∞
    assert user_not_exists(user.id)
4. –ß–∏—Ç–∞–µ–º–æ—Å—Ç—å —Ç–µ—Å—Ç–æ–≤
python
# –•–û–†–û–®–û: –ø–æ–Ω—è—Ç–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
def test_user_creation_with_valid_data():
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —è–≤–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    user = create_user(name="John", email="john@test.com")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    assert user.id is not None      # ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    assert user.is_active          # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–∫—Ç–∏–≤–µ–Ω

# –ü–õ–û–•–û: –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏ —Å–∂–∞—Ç—ã–π –∫–æ–¥
def test_user():
    u = create_user("John", "john@test.com")  # –ù–µ—è—Å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    assert u.id and u.active  # –ù–µ—è–≤–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
üéì –ü—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
text
project/                    # –ö–æ—Ä–Ω–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞
‚îú‚îÄ‚îÄ src/                   # –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚îÇ   ‚îú‚îÄ‚îÄ __init__.py        # –î–µ–ª–∞–µ—Ç src Python-–ø–∞–∫–µ—Ç–æ–º
‚îÇ   ‚îú‚îÄ‚îÄ calculator.py      # –ú–æ–¥—É–ª—å —Å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
‚îÇ   ‚îî‚îÄ‚îÄ user.py           # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
‚îú‚îÄ‚îÄ tests/                 # –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞
‚îÇ   ‚îú‚îÄ‚îÄ __init__.py        # –î–µ–ª–∞–µ—Ç tests Python-–ø–∞–∫–µ—Ç–æ–º
‚îÇ   ‚îú‚îÄ‚îÄ test_calculator.py # –¢–µ—Å—Ç—ã –¥–ª—è calculator.py
‚îÇ   ‚îú‚îÄ‚îÄ test_user.py      # –¢–µ—Å—Ç—ã –¥–ª—è user.py
‚îÇ   ‚îî‚îÄ‚îÄ conftest.py       # –û–±—â–∏–µ —Ñ–∏–∫—Å—Ç—É—Ä—ã –¥–ª—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
‚îú‚îÄ‚îÄ pytest.ini            # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è pytest
‚îî‚îÄ‚îÄ requirements.txt      # –°–ø–∏—Å–æ–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞
–§–∞–π–ª —Å –æ–±—â–∏–º–∏ —Ñ–∏–∫—Å—Ç—É—Ä–∞–º–∏ (tests/conftest.py)
python
import pytest

# –§–∏–∫—Å—Ç—É—Ä—ã –≤ conftest.py –¥–æ—Å—Ç—É–ø–Ω—ã –≤–æ –≤—Å–µ—Ö —Ç–µ—Å—Ç–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞
@pytest.fixture
def sample_user_data():
    """–§–∏–∫—Å—Ç—É—Ä–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return {
        "name": "Test User",       # –¢–µ—Å—Ç–æ–≤–æ–µ –∏–º—è
        "email": "test@example.com", # –¢–µ—Å—Ç–æ–≤—ã–π email
        "password": "secure123"    # –¢–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
    }

# –≠—Ç–∞ —Ñ–∏–∫—Å—Ç—É—Ä–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ test_user.py, test_calculator.py –∏ –¥—Ä.
